{"version":3,"file":"modal-container.js","sourceRoot":"","sources":["modal-container.ts"],"names":[],"mappings":"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","sourcesContent":["import {\n    Component,\n    ComponentResolver,\n    ViewContainerRef,\n    ReflectiveInjector,\n    ViewChild,\n    ViewEncapsulation,\n    AfterViewInit,\n    ElementRef\n} from '@angular/core';\n\nimport { DialogRef, ModalCompileConfig } from '../../angular2-modal';\n\nimport {Modal} from './modal';\nimport {supportsKey} from '../../framework/utils';\nimport {BSModalContext} from './modal-context';\n\n/**\n * A component that acts as a top level container for an open modal window.\n */\n@Component({\n    selector: 'modal-container',\n    host: {\n        'tabindex': '-1',\n        'role': 'dialog',\n        'class': 'in modal',\n        'style': 'display: block',\n        '[style.position]': 'position',\n        '(body:keydown)': 'documentKeypress($event)'\n    },\n    encapsulation: ViewEncapsulation.None,\n    /* tslint:disable */\n    template:\n        `<div [ngClass]=\"dialog.context.dialogClass\"\n          [class.modal-lg]=\"dialog.context.size == \\'lg\\'\"\n          [class.modal-sm]=\"dialog.context.size == \\'sm\\'\">\n         <div class=\"modal-content\"              \n              style=\"display:block\"              \n              role=\"document\"\n              (clickOutside)=\"onClickOutside()\">\n            <div style=\"display: none\" #modalDialog></div>\n         </div>\n    </div>`\n    /* tslint:enable */\n})\nexport class BSModalContainer implements AfterViewInit {\n    public position: string;\n\n    @ViewChild('modalDialog', {read: ViewContainerRef}) private _viewContainer: ViewContainerRef;\n\n    constructor(public dialog: DialogRef<BSModalContext>,\n                private el: ElementRef,\n                private _compileConfig: ModalCompileConfig,\n                private _modal: Modal,\n                private _cr: ComponentResolver) {\n        if (!dialog.inElement) {\n            this.position = null;\n        } else {\n            this.position = 'absolute';\n        }\n    }\n\n    ngAfterViewInit() {\n        this._cr.resolveComponent(this._compileConfig.component)\n            .then(cmpFactory => {\n                const vcr = this._viewContainer,\n                    bindings = this._compileConfig.bindings,\n                    ctxInjector = vcr.parentInjector;\n\n                const childInjector = Array.isArray(bindings) && bindings.length > 0 ?\n                    ReflectiveInjector.fromResolvedProviders(bindings, ctxInjector) : ctxInjector;\n\n                if (this.el.nativeElement) {\n                    this.el.nativeElement.focus();\n                }\n                \n                this.dialog.contentRef = vcr.createComponent(cmpFactory, vcr.length, childInjector);\n            });\n    }\n\n    onClickOutside() {\n        return this._modal.isTopMost(this.dialog) &&\n            !this.dialog.context.isBlocking &&\n            this.dialog.dismiss();\n    }\n\n    documentKeypress(event: KeyboardEvent) {\n        // check that this modal is the last in the stack.\n        if (!this._modal.isTopMost(this.dialog)) return;\n\n\n        if (supportsKey(event.keyCode, <any>this.dialog.context.keyboard)) {\n            this.dialog.dismiss();\n        }\n    }\n}\n"]}