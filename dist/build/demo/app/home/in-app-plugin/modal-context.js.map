{"version":3,"file":"modal-context.js","sourceRoot":"","sources":["modal-context.ts"],"names":[],"mappings":";;;;;;AACA,+BAKO,uCAAuC,CAAC,CAAA;AAG/C;IAAuC,qCAAgB;IAAvD;QAAuC,8BAAgB;IAOvD,CAAC;IAHG,qCAAS,GAAT;QACI,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC;YAAC,IAAI,CAAC,OAAO,GAAG,EAAE,CAAC;IACzC,CAAC;IACL,wBAAC;AAAD,CAAC,AAPD,CAAuC,iCAAgB,GAOtD;AAPY,yBAAiB,oBAO7B,CAAA;AAGD;IAA8C,4CAA0C;IAIpF,kCACI,KAAY;QAEZ,kBACS,EAAE,OAAA,KAAK,EAAE,EACd,CAAC,OAAO,EAAE,aAAa,CAAC,EACnB,iBAAiB,CAEzB,CAAC;IACN,CAAC;IACL,+BAAC;AAAD,CAAC,AAdD,CAA8C,wCAAuB,GAcpE;AAdY,gCAAwB,2BAcpC,CAAA","sourcesContent":["import { TemplateRef } from '@angular/core';\nimport {\n    Modal,\n    ModalOpenContextBuilder, \n    ModalOpenContext,\n    FluentAssignMethod\n} from '../../../../components/angular2-modal';\n\n\nexport class InAppModalContext extends ModalOpenContext {\n    \n    title: string;\n    templateRef: TemplateRef<any>;\n    normalize(): void {\n        if (!this.message) this.message = '';\n    }\n}\n\n\nexport class InAppModalContextBuilder extends ModalOpenContextBuilder<InAppModalContext> {\n    title: FluentAssignMethod<string, this>;\n    templateRef: FluentAssignMethod<TemplateRef<any>, this>;\n\n    constructor(\n        modal: Modal\n    ) {\n        super(\n            <any>{ modal },\n            ['title', 'templateRef'],\n            <any>InAppModalContext \n            // https://github.com/Microsoft/TypeScript/issues/7234\n        );\n    }\n}\n\n"]}