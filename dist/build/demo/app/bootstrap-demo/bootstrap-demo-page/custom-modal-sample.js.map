{"version":3,"file":"custom-modal-sample.js","sourceRoot":"","sources":["custom-modal-sample.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;AAAA,qBAAwB,eAAe,CAAC,CAAA;AAExC,+BAAwC,uCAAuC,CAAC,CAAA;AAChF,sBAA6B,+DAA+D,CAAC,CAAA;AAE7F;IAAiD,+CAAc;IAC3D,qCAAmB,IAAY,EAAS,IAAY;QAChD,iBAAO,CAAC;QADO,SAAI,GAAJ,IAAI,CAAQ;QAAS,SAAI,GAAJ,IAAI,CAAQ;IAEpD,CAAC;IACL,kCAAC;AAAD,CAAC,AAJD,CAAiD,sBAAc,GAI9D;AAJY,mCAA2B,8BAIvC,CAAA;AAED;;GAEG;AAuCH;IAKI,iCAAmB,MAA8C;QAA9C,WAAM,GAAN,MAAM,CAAwC;QAC7D,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC,OAAO,CAAC;QAC9B,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;IAC5B,CAAC;IAED,yCAAO,GAAP,UAAQ,KAAK;QACT,IAAI,CAAC,WAAW,GAAG,KAAK,IAAI,CAAC,CAAC;QAC9B,IAAI,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC;IACxB,CAAC;IAGD,+CAAa,GAAb;QACI,MAAM,CAAC,IAAI,CAAC;IAChB,CAAC;IAED,6CAAW,GAAX;QACI,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC;IAC5B,CAAC;IA5DL;QAAC,gBAAS,CAAC;YACP,QAAQ,EAAE,eAAe;YACzB,MAAM,EAAE,CAAC,icAcR,CAAC;YACF,+FAA+F;YAC/F,sBAAsB;YACtB,oBAAoB,CAAC,QAAQ,EAAE,m5BAiBpB;SACd,CAAC;;+BAAA;IAwBF,8BAAC;AAAD,CAAC,AAvBD,IAuBC;AAvBY,+BAAuB,0BAuBnC,CAAA","sourcesContent":["import {Component} from '@angular/core';\n\nimport {DialogRef, ModalComponent} from '../../../../components/angular2-modal';\nimport {BSModalContext} from '../../../../components/angular2-modal/plugins/bootstrap/index';\n\nexport class AdditionCalculateWindowData extends BSModalContext {\n    constructor(public num1: number, public num2: number) {\n        super();\n    }\n}\n\n/**\n * A Sample of how simple it is to create a new window, with its own injects.\n */\n@Component({\n    selector: 'modal-content',\n    styles: [`\n        .custom-modal-container {\n            padding: 15px;\n        }\n\n        .custom-modal-header {\n            background-color: #219161;\n            color: #fff;\n            -webkit-box-shadow: 0px 3px 5px 0px rgba(0,0,0,0.75);\n            -moz-box-shadow: 0px 3px 5px 0px rgba(0,0,0,0.75);\n            box-shadow: 0px 3px 5px 0px rgba(0,0,0,0.75);\n            margin-top: -15px;\n            margin-bottom: 40px;\n        }\n    `],\n    //TODO: [ngClass] here on purpose, no real use, just to show how to workaround ng2 issue #4330.\n    // Remove when solved.\n    /* tslint:disable */ template: `\n        <div class=\"container-fluid custom-modal-container\">\n            <div class=\"row custom-modal-header\">\n                <div class=\"col-sm-12\">\n                    <h1>A Custom modal design</h1>\n                </div>\n            </div>\n            <div class=\"row\" [ngClass]=\"{'myclass' : shouldUseMyClass}\">\n                <div class=\"col-xs-12\">\n                    <div class=\"jumbotron\">\n                        <h1>Do the math to quit:</h1>\n                        <p class=\"lead\">I received an injection of the number <strong>{{context.num1}}</strong> and the number <strong>{{context.num2}}</strong></p>\n                        <span>What is the sum?</span>\n                         <input class=\"form-control\" type=\"text\" #answer (keyup)=\"onKeyUp(answer.value)\" autofocus>\n                    </div>\n                </div>\n            </div>\n        </div>`\n})\nexport class AdditionCalculateWindow implements ModalComponent<AdditionCalculateWindowData> {\n    context: AdditionCalculateWindowData;\n\n    public wrongAnswer: boolean;\n\n    constructor(public dialog: DialogRef<AdditionCalculateWindowData>) {\n        this.context = dialog.context;\n        this.wrongAnswer = true;\n    }\n\n    onKeyUp(value) {\n        this.wrongAnswer = value != 5;\n        this.dialog.close();\n    }\n\n\n    beforeDismiss(): boolean {\n        return true;\n    }\n\n    beforeClose(): boolean {\n        return this.wrongAnswer;\n    }\n}\n"]}