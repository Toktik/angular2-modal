{"version":3,"file":"vex-demo.js","sourceRoot":"","sources":["vex-demo.ts"],"names":[],"mappings":";;;;;;;;;;AAAA,qBAA0E,eAAe,CAAC,CAAA;AAE1F,oBAOO,gDAAgD,CAAC,CAAA;AAExD,sBAAgD,oBAAoB,CAAC,CAAA;AACrE,IAAY,OAAO,WAAM,WAAW,CAAC,CAAA;AACrC,6BAA0B,gBAAgB,CAAC,CAAA;AAmB3C;IAKI,iBAAmB,KAAY,EAAE,aAA+B;QALpE,iBA4DC;QAvDsB,UAAK,GAAL,KAAK,CAAO;QAH/B,UAAK,GAAuC,SAAS,CAAC;QAIlD;;;WAGG;QACH,IAAI,CAAC,KAAK,CAAC,oBAAoB,GAAG,aAAa,CAAC;QAEhD,IAAI,CAAC,aAAa,GAAG;YACjB;gBACI,IAAI,EAAE,eAAe;gBACrB,OAAO,EAAE,cAAM,OAAA,OAAO,CAAC,KAAK,CAAC,IAAI,CAAC,KAAI,EAAE,KAAI,CAAC,KAAK,CAAC,CAAC,IAAI,EAAE,EAA3C,CAA2C;aAC7D;YACD;gBACI,IAAI,EAAE,gBAAgB;gBACtB,OAAO,EAAE,cAAM,OAAA,OAAO,CAAC,MAAM,CAAC,IAAI,CAAC,KAAI,EAAE,KAAI,CAAC,KAAK,CAAC,CAAC,IAAI,EAAE,EAA5C,CAA4C;aAC9D;YACD;gBACI,IAAI,EAAE,iBAAiB;gBACvB,OAAO,EAAE,cAAM,OAAA,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC,KAAI,EAAE,KAAI,CAAC,KAAK,CAAC,CAAC,IAAI,EAAE,EAA7C,CAA6C;aAC/D;YACD;gBACI,IAAI,EAAE,mBAAmB;gBACzB,OAAO,EAAE,cAAM,OAAA,OAAO,CAAC,SAAS,CAAC,IAAI,CAAC,KAAI,EAAE,KAAI,CAAC,KAAK,CAAC,CAAC,IAAI,EAAE,EAA/C,CAA+C;aACjE;YACD;gBACI,IAAI,EAAE,oBAAoB;gBAC1B,OAAO,EAAE,cAAM,OAAA,OAAO,CAAC,KAAK,CAAC,IAAI,CAAC,KAAI,EAAE,KAAI,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,KAAI,CAAC,QAAQ,CAAC,UAAU,CAAC,EAAnE,CAAmE;aACrF;YACD;gBACI,IAAI,EAAE,sBAAsB;gBAC5B,OAAO,EAAE;oBACL,MAAM,CAAC,IAAI,yBAAmB,CAAe,KAAI,CAAC,KAAK,CAAC;yBACnD,SAAS,CAAC,KAAI,CAAC,KAAK,CAAC;yBACrB,OAAO,CAAC,0BAAW,CAAC;yBACpB,OAAO,CAAC,8BAA8B,CAAC;yBACvC,WAAW,CAAC,MAAM,CAAC;yBACnB,SAAS,CACN,6CAA6C,EAC7C,QAAQ,EACR,UAAC,GAAoB,EAAE,MAAkB,IAAK,OAAA,GAAG,CAAC,MAAM,CAAC,KAAK,CAAC,OAAO,CAAC,EAAzB,CAAyB,CAC1E;yBACA,eAAe,CAAC,OAAO,CAAC;yBACxB,IAAI,EAAE,CAAC;gBAChB,CAAC;aACJ;YACD;gBACI,IAAI,EAAE,YAAY;gBAClB,OAAO,EAAE,cAAM,OAAA,OAAO,CAAC,SAAS,CAAC,IAAI,CAAC,KAAI,EAAE,KAAI,CAAC,KAAK,CAAC,CAAC,IAAI,EAAE,EAA/C,CAA+C;aACjE;YACD;gBACI,IAAI,EAAE,gBAAgB;gBACtB,OAAO,EAAE,cAAM,OAAA,OAAO,CAAC,aAAa,CAAC,IAAI,CAAC,KAAI,EAAE,KAAI,CAAC,KAAK,CAAC,CAAC,IAAI,EAAE,EAAnD,CAAmD;aACrE;SACJ,CAAC;IACN,CAAC;IAxDD;QAAC,gBAAS,CAAC,gBAAQ,CAAC;;6CAAA;IApBxB;QAAC,gBAAS,CAAC;YACP,QAAQ,EAAE,UAAU;YACpB,SAAS,EAAE;gBACP,gCAAgC;gBAChC,8CAA8C;gBAC9C,yCAAyC;gBACzC,4CAA4C;gBAC5C,gDAAgD;gBAChD,kDAAkD;gBAClD,0CAA0C;gBAC1C,0DAA0D;aAC7D;YACD,WAAW,EAAE,qCAAqC;YAClD,SAAS,EAAM,yBAAmB,QAAC;YACnC,UAAU,EAAE,CAAE,gBAAQ,CAAE;YACxB,aAAa,EAAE,wBAAiB,CAAC,IAAI;SACxC,CAAC;;eAAA;IA6DF,cAAC;AAAD,CAAC,AA5DD,IA4DC;AA5DY,eAAO,UA4DnB,CAAA","sourcesContent":["import { Component, ViewEncapsulation, ViewContainerRef, ViewChild } from '@angular/core';\n\nimport {\n    VEXBuiltInThemes,\n    VEX_MODAL_PROVIDERS,\n    Modal,\n    DialogPreset,\n    DialogFormModal,\n    DialogPresetBuilder\n} from '../../../components/angular2-modal/plugins/vex';\n\nimport { DemoHead, ModalCommandDescriptor} from '../demo-head/index';\nimport * as presets from './presets';\nimport {LoginDialog} from './login-dialog';\n\n@Component({\n    selector: 'vex-demo',\n    styleUrls: [\n        'demo/app/vex-demo//css/vex.css',\n        'demo/app/vex-demo//css/vex-theme-default.css',\n        'demo/app/vex-demo//css/vex-theme-os.css',\n        'demo/app/vex-demo//css/vex-theme-plain.css',\n        'demo/app/vex-demo//css/vex-theme-wireframe.css',\n        'demo/app/vex-demo//css/vex-theme-flat-attack.css',\n        'demo/app/vex-demo//css/vex-theme-top.css',\n        'demo/app/vex-demo//css/vex-theme-bottom-right-corner.css'\n    ],\n    templateUrl: 'demo/app/vex-demo/vex-demo.tpl.html',\n    providers: [...VEX_MODAL_PROVIDERS],\n    directives: [ DemoHead ],\n    encapsulation: ViewEncapsulation.None\n})\nexport class VexDemo {\n    modalCommands: ModalCommandDescriptor[];\n    theme: VEXBuiltInThemes = <VEXBuiltInThemes>'default';\n    @ViewChild(DemoHead) private demoHead: DemoHead;\n\n    constructor(public modal: Modal, viewContainer: ViewContainerRef) {\n        /**\n         * A Default view container ref, usually the app root container ref.\n         * Has to be set manually until we can find a way to get it automatically.\n         */\n        this.modal.defaultViewContainer = viewContainer;\n\n        this.modalCommands = [\n            {\n                text: 'alert drop in',\n                factory: () => presets.alert.call(this, this.modal).open()\n            },\n            {\n                text: 'prompt drop in',\n                factory: () => presets.prompt.call(this, this.modal).open()\n            },\n            {\n                text: 'confirm drop in',\n                factory: () => presets.confirm.call(this, this.modal).open()\n            },\n            {\n                text: 'Cascading example',\n                factory: () => presets.cascading.call(this, this.modal).open()\n            },\n            {\n                text: 'In Element example',\n                factory: () => presets.alert.call(this, this.modal).open(this.demoHead.vcCommands)\n            },\n            {\n                text: 'Custom Modal example',\n                factory: () => {\n                    return new DialogPresetBuilder<DialogPreset>(this.modal)\n                        .className(this.theme)\n                        .content(LoginDialog)\n                        .message('Ary you coming to the event?')\n                        .addOkButton('Yep!')\n                        .addButton(\n                            'vex-dialog-button-primary vex-dialog-button',\n                            'Maybe?',\n                            (cmp: DialogFormModal, $event: MouseEvent) => cmp.dialog.close('Maybe')\n                        )\n                        .addCancelButton('Nope!')\n                        .open();\n                }\n            },\n            {\n                text: 'no buttons',\n                factory: () => presets.noButtons.call(this, this.modal).open()\n            },\n            {\n                text: 'custom buttons',\n                factory: () => presets.customButtons.call(this, this.modal).open()\n            }\n        ];\n    }\n}\n"]}